profiles {
	docker {
		includeConfig './conf/standAloneRunContainer.config'
		docker.enabled = true
		process {
			executor = 'local'
			containerOptions = "-v ${params.global.dataDir}:${params.global.dataDir} \
				-v ${params.global.runDir}:${params.global.runDir} \
				-v ${params.global.outDir}:${params.global.outDir}"
		}
	}

	singularity {
		includeConfig './conf/standAloneRunContainer.config'
		singularity.enabled = true
		process {
			executor = 'local'
			containerOptions = "-B ${params.folder.dataDir} \
				-B ${params.global.runDir} \
				-B ${params.global.outDir}"
		}
	}

	standard {
		includeConfig './conf/standAloneRun.config'
		params.Seurat.container = ""
		process {
			executor = 'local'
		}
	}

	reports {
		report.enabled = true
	}

	HTO {
		includeConfig './conf/HTO.config'
	}

	RNA {
		includeConfig './conf/RNA.config'
	}

	ADT {
		includeConfig './conf/ADT.config'
	}

	hashtags_citeseq {
		includeConfig './conf/HTO.config'
		includeConfig './conf/RNA.config'
		includeConfig './conf/ADT.config'
	}

	citeseq {
		includeConfig './conf/RNA.config'
		includeConfig './conf/ADT.config'
	}

	hashtags_rnaseq {
		includeConfig './conf/HTO.config'
		includeConfig './conf/RNA.config'
	}
}

params {
	configParser = {var, varmap ->
			if(varmap.containsKey(var)){
				return varmap[var]
			}else{
				return varmap
			}
	}
}
